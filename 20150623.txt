// class Arvore.java
package paralel;

import java.util.Random;

public class Arvore {
	private int valor;
	private Arvore left;
	private Arvore right;
	
	public Arvore(int valor,Arvore left, Arvore right){
		this.valor = valor;
		this.left = left;
		this.right = right;
	}

	public Arvore(int valor){
		this.valor = valor;
		left = null;
		right = null;
	}
	
	public Arvore(){}
	
	
	
	public int getValor() {
		return valor;
	}

	public void setValor(int valor) {
		this.valor = valor;
	}

	public Arvore getLeft() {
		return left;
	}

	public void setLeft(Arvore left) {
		this.left = left;
	}

	public Arvore getRight() {
		return right;
	}

	public void setRight(Arvore right) {
		this.right = right;
	}

	public static void inserir(Arvore tree, int valor) {
			if (valor < tree.getValor()) {
				
				if(tree.getLeft() != null){
					//System.out.println("rec left");
					inserir(tree.getLeft(),valor);
				}else{
					//System.out.println("insert left");
					tree.setLeft(new Arvore(valor));
				}
				
			}else if(valor >= tree.getValor()){
				if(tree.getRight() != null){
					//System.out.println("rec right");
					inserir(tree.getRight(),valor);
				}else{
					//System.out.println("insert rioght");
					tree.setRight(new Arvore(valor));
					
				}
			}
			
		
		
	}
	
	public static void prefixado(Arvore no) 
	{ if(no != null){ 
		System.out.print(no.getValor() + " ");
		prefixado(no.getLeft()); 
		prefixado(no.getRight());
		} }

	public static int randInt() {
		int min = 1;
		int max = 55000;

	    Random rand = new Random();

	    int randomNum = rand.nextInt((max - min) + 1) + min;

	    return randomNum;
	}
	
	public static void main (String[] args){
	
		long inicio = System.currentTimeMillis();
	Arvore tree = new Arvore (randInt());
	
	for (int i = 0; i < 50*2000; i++) {
		inserir(tree,randInt());
	}

	//prefixado(tree);
	long fim = System.currentTimeMillis();
	System.out.println("tempo gasto = "+ (fim - inicio));
	
	}
}
//class Main
package paralel;

import java.util.Random;

public class Main implements Runnable{
	static Arvore av = new Arvore(randInt());
	public void run() {
		
		for (int i = 0; i < 2000; i++) {
			av.inserir(av,randInt());
		}
	}
	
	public static int randInt() {
		int min = 1;
		int max = 5000;
	
	    Random rand = new Random();

	    int randomNum = rand.nextInt((max - min) + 1) + min;

	    return randomNum;
	}
	
	public static void main(String[] args){
		long inicio = System.currentTimeMillis();
		for (int i = 0; i < 50; i++) {
			Thread t = new Thread(new Main());
			t.start();
		}
		long fim = System.currentTimeMillis();
		System.out.println("tempo gasto = "+ (fim - inicio));
		//av.prefixado(av);
	}

}
